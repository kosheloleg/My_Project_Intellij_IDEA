public class СonsoleMenuExmple {
 private static String[] operationNames = {"1. Прийти","2. Уйти","3. Зайти","4. Выйти"};
 public static void printMenu(){
  for(String m:operationNames) System.out.println( m );
 }
 public static void main(String[] args) {
  Scanner scan = new Scanner(System.in);
  boolean runWhile = true;
  while(runWhile){
   printMenu();
   int k = scan.nextInt();
   switch (k){
    case 1:System.out.println("fucntion Прийти");break;
    case 2:System.out.println("fucntion Уйти");break;
    case 3:System.out.println("fucntion Зайти");break;
    case 4:runWhile = false;
   }
  }
 }
}

/////////////////////////////////////////////////

Базовый, супер или родитель
Наследник, потомок произволный клас



instanceof - определить

///////////////////////////////////////////////////////////////////////
Figura[] f = new Figura[10];

Figura b = f[ i ];

if( b instanceof Circle) { ... }

b = new Rectangle();
if( b instanceof Rectangle) { ... } // true
if( b instanceof Square) { ... } // false

b=new Square()
if( b instanceof Rectangle) { ... } // true
if( b instanceof Square) { ... } // true

/////////////////////////////////////////////////////////////////////////
import java.io.FileReader;
import java.io.FileWriter;
import java.util.Scanner;

public class ReaderWriterExample {
 public static void main(String[] args) throws Exception{
  String fileName = "file1.txt";
  /*
  FileWriter fw = new FileWriter(fileName);
  fw.write("stroka 1\n15d\t9");
  fw.write("stroka 2");
  //fw.flush();
  fw.close();
  */

  FileReader fr = new FileReader(fileName);
  Scanner scan = new Scanner(fr);
  int i = 0;
  while (scan.hasNextLine()) {
   System.out.println("строка с номером :" + i+": " + scan.nextLine());
  }
  scan.close();

 }
}

StringBuilder

Замер производительности -----------------------------------------------------
import java.util.Arrays;

public class Task1 {
 public static void main(String[] args) {
  int[] arr1 = new int[500];
  long timeBegin;
  long t2;
  long scoreTime;
  for (int i = 0; i < arr1.length; i++)
   arr1[i] = (int) (Math.random() * 100);

  System.out.println(Arrays.toString(arr1));
  int[] arr2 = Arrays.copyOf(arr1, arr1.length);
  int[] arr3 = Arrays.copyOf(arr1, arr1.length);
  int[] arr4 = Arrays.copyOf(arr1, arr1.length);
  int[] arr5 = Arrays.copyOf(arr1, arr1.length);

  if (Arrays.equals(arr1, arr2))
   System.out.println("равны");
  else
   System.out.println("не равны");

  timeBegin = System.nanoTime();
  bubblesort(arr1);
  scoreTime = System.nanoTime() - timeBegin;

  System.out.print("bubblesort(arr1)= ");
  if (scoreTime < 10000000)
   System.out.print("0");
  System.out.println(scoreTime);

  timeBegin = System.nanoTime();
  bubblesort(arr2);
  scoreTime = System.nanoTime() - timeBegin;

  System.out.print("bubblesort(arr2)= ");
  if (scoreTime < 10000000)
   System.out.print("0");
  System.out.println(scoreTime);

  timeBegin = System.nanoTime();
  bubblesort(arr3);
  scoreTime = System.nanoTime() - timeBegin;

  System.out.print("bubblesort(arr3)= ");
  if (scoreTime < 10000000)
   System.out.print("0");
  System.out.println(scoreTime);

  timeBegin = System.nanoTime();
  bubblesort(arr4);
  scoreTime = System.nanoTime() - timeBegin;

  System.out.print("bubblesort(arr4)= ");
  if (scoreTime < 10000000)
   System.out.print("0");
  System.out.println(scoreTime);

  timeBegin = System.nanoTime();
  bubblesort(arr5);
  scoreTime = System.nanoTime() - timeBegin;

  System.out.print("bubblesort(arr5)= ");
  if (scoreTime < 10000000)
   System.out.print("0");
  System.out.println(scoreTime);
 }

 public static void bubblesort(int[] arr) {
  for (int k = 0; k < arr.length - 2; k++) {
   for (int i = 0; i < arr.length - 1; i++) {
    if (arr[i] < arr[i + 1]) {
     int temp = arr[i];
     arr[i] = arr[i + 1];
     arr[i + 1] = temp;
    }
   }
  }
 }
}
--------------------------------------------------------------------